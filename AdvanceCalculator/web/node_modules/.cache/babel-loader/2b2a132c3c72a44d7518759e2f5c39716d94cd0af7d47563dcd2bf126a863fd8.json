{"ast":null,"code":"import React from'react';import BasicKeypad from'./BasicKeypad';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ScientificKeypad=_ref=>{let{onDigitPress,onDecimalPress,onOperationPress,onClear,displayValue,setDisplayValue,addToHistory}=_ref;const scientificFunctions=[{text:'sin',onClick:()=>{const value=Math.sin(parseFloat(displayValue)*Math.PI/180);setDisplayValue(value.toString());addToHistory(`sin(${displayValue}°) = ${value}`);}},{text:'cos',onClick:()=>{const value=Math.cos(parseFloat(displayValue)*Math.PI/180);setDisplayValue(value.toString());addToHistory(`cos(${displayValue}°) = ${value}`);}},{text:'tan',onClick:()=>{const value=Math.tan(parseFloat(displayValue)*Math.PI/180);setDisplayValue(value.toString());addToHistory(`tan(${displayValue}°) = ${value}`);}},{text:'log',onClick:()=>{const value=Math.log10(parseFloat(displayValue));setDisplayValue(value.toString());addToHistory(`log(${displayValue}) = ${value}`);}},{text:'ln',onClick:()=>{const value=Math.log(parseFloat(displayValue));setDisplayValue(value.toString());addToHistory(`ln(${displayValue}) = ${value}`);}},{text:'√',onClick:()=>{const value=Math.sqrt(parseFloat(displayValue));setDisplayValue(value.toString());addToHistory(`√(${displayValue}) = ${value}`);}},{text:'x²',onClick:()=>{const value=Math.pow(parseFloat(displayValue),2);setDisplayValue(value.toString());addToHistory(`${displayValue}² = ${value}`);}},{text:'x³',onClick:()=>{const value=Math.pow(parseFloat(displayValue),3);setDisplayValue(value.toString());addToHistory(`${displayValue}³ = ${value}`);}},{text:'1/x',onClick:()=>{const value=1/parseFloat(displayValue);setDisplayValue(value.toString());addToHistory(`1/${displayValue} = ${value}`);}},{text:'π',onClick:()=>{setDisplayValue(Math.PI.toString());}},{text:'e',onClick:()=>{setDisplayValue(Math.E.toString());}},{text:'n!',onClick:()=>{const n=parseInt(displayValue);let factorial=1;for(let i=2;i<=n;i++){factorial*=i;}setDisplayValue(factorial.toString());addToHistory(`${displayValue}! = ${factorial}`);}}];return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"scientific-keypad\",children:scientificFunctions.map((button,index)=>/*#__PURE__*/_jsx(\"button\",{className:\"scientific-button\",onClick:button.onClick,children:button.text},index))}),/*#__PURE__*/_jsx(BasicKeypad,{onDigitPress:onDigitPress,onDecimalPress:onDecimalPress,onOperationPress:onOperationPress,onClear:onClear,onEquals:()=>{}})]});};export default ScientificKeypad;","map":{"version":3,"names":["React","BasicKeypad","jsx","_jsx","jsxs","_jsxs","ScientificKeypad","_ref","onDigitPress","onDecimalPress","onOperationPress","onClear","displayValue","setDisplayValue","addToHistory","scientificFunctions","text","onClick","value","Math","sin","parseFloat","PI","toString","cos","tan","log10","log","sqrt","pow","E","n","parseInt","factorial","i","children","className","map","button","index","onEquals"],"sources":["/Users/alokrathaur/Documents/testProject/web/src/components/ScientificKeypad.tsx"],"sourcesContent":["import React from 'react';\nimport BasicKeypad from './BasicKeypad';\n\ninterface ScientificKeypadProps {\n  onDigitPress: (digit: string) => void;\n  onDecimalPress: () => void;\n  onOperationPress: (operation: string) => void;\n  onClear: () => void;\n  displayValue: string;\n  setDisplayValue: (value: string) => void;\n  addToHistory: (calculation: string) => void;\n}\n\nconst ScientificKeypad: React.FC<ScientificKeypadProps> = ({\n  onDigitPress,\n  onDecimalPress,\n  onOperationPress,\n  onClear,\n  displayValue,\n  setDisplayValue,\n  addToHistory,\n}) => {\n  const scientificFunctions = [\n    { text: 'sin', onClick: () => {\n      const value = Math.sin(parseFloat(displayValue) * Math.PI / 180);\n      setDisplayValue(value.toString());\n      addToHistory(`sin(${displayValue}°) = ${value}`);\n    }},\n    { text: 'cos', onClick: () => {\n      const value = Math.cos(parseFloat(displayValue) * Math.PI / 180);\n      setDisplayValue(value.toString());\n      addToHistory(`cos(${displayValue}°) = ${value}`);\n    }},\n    { text: 'tan', onClick: () => {\n      const value = Math.tan(parseFloat(displayValue) * Math.PI / 180);\n      setDisplayValue(value.toString());\n      addToHistory(`tan(${displayValue}°) = ${value}`);\n    }},\n    { text: 'log', onClick: () => {\n      const value = Math.log10(parseFloat(displayValue));\n      setDisplayValue(value.toString());\n      addToHistory(`log(${displayValue}) = ${value}`);\n    }},\n    { text: 'ln', onClick: () => {\n      const value = Math.log(parseFloat(displayValue));\n      setDisplayValue(value.toString());\n      addToHistory(`ln(${displayValue}) = ${value}`);\n    }},\n    { text: '√', onClick: () => {\n      const value = Math.sqrt(parseFloat(displayValue));\n      setDisplayValue(value.toString());\n      addToHistory(`√(${displayValue}) = ${value}`);\n    }},\n    { text: 'x²', onClick: () => {\n      const value = Math.pow(parseFloat(displayValue), 2);\n      setDisplayValue(value.toString());\n      addToHistory(`${displayValue}² = ${value}`);\n    }},\n    { text: 'x³', onClick: () => {\n      const value = Math.pow(parseFloat(displayValue), 3);\n      setDisplayValue(value.toString());\n      addToHistory(`${displayValue}³ = ${value}`);\n    }},\n    { text: '1/x', onClick: () => {\n      const value = 1 / parseFloat(displayValue);\n      setDisplayValue(value.toString());\n      addToHistory(`1/${displayValue} = ${value}`);\n    }},\n    { text: 'π', onClick: () => {\n      setDisplayValue(Math.PI.toString());\n    }},\n    { text: 'e', onClick: () => {\n      setDisplayValue(Math.E.toString());\n    }},\n    { text: 'n!', onClick: () => {\n      const n = parseInt(displayValue);\n      let factorial = 1;\n      for (let i = 2; i <= n; i++) {\n        factorial *= i;\n      }\n      setDisplayValue(factorial.toString());\n      addToHistory(`${displayValue}! = ${factorial}`);\n    }},\n  ];\n\n  return (\n    <div>\n      <div className=\"scientific-keypad\">\n        {scientificFunctions.map((button, index) => (\n          <button\n            key={index}\n            className=\"scientific-button\"\n            onClick={button.onClick}>\n            {button.text}\n          </button>\n        ))}\n      </div>\n      \n      <BasicKeypad\n        onDigitPress={onDigitPress}\n        onDecimalPress={onDecimalPress}\n        onOperationPress={onOperationPress}\n        onClear={onClear}\n        onEquals={() => {}}\n      />\n    </div>\n  );\n};\n\nexport default ScientificKeypad; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}