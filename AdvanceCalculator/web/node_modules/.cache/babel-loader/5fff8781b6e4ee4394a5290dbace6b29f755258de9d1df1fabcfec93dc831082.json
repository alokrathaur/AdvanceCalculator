{"ast":null,"code":"var _jsxFileName = \"/Users/alokrathaur/Documents/testProject/web/src/components/BasicKeypad.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BasicKeypad = ({\n  onDigitPress,\n  onDecimalPress,\n  onOperationPress,\n  onClear,\n  onEquals\n}) => {\n  const buttons = [{\n    text: 'C',\n    type: 'clear',\n    onClick: onClear\n  }, {\n    text: '±',\n    type: 'operation',\n    onClick: () => {}\n  }, {\n    text: '%',\n    type: 'operation',\n    onClick: () => {}\n  }, {\n    text: '÷',\n    type: 'operation',\n    onClick: () => onOperationPress('÷')\n  }, {\n    text: '7',\n    type: 'digit',\n    onClick: () => onDigitPress('7')\n  }, {\n    text: '8',\n    type: 'digit',\n    onClick: () => onDigitPress('8')\n  }, {\n    text: '9',\n    type: 'digit',\n    onClick: () => onDigitPress('9')\n  }, {\n    text: '×',\n    type: 'operation',\n    onClick: () => onOperationPress('×')\n  }, {\n    text: '4',\n    type: 'digit',\n    onClick: () => onDigitPress('4')\n  }, {\n    text: '5',\n    type: 'digit',\n    onClick: () => onDigitPress('5')\n  }, {\n    text: '6',\n    type: 'digit',\n    onClick: () => onDigitPress('6')\n  }, {\n    text: '-',\n    type: 'operation',\n    onClick: () => onOperationPress('-')\n  }, {\n    text: '1',\n    type: 'digit',\n    onClick: () => onDigitPress('1')\n  }, {\n    text: '2',\n    type: 'digit',\n    onClick: () => onDigitPress('2')\n  }, {\n    text: '3',\n    type: 'digit',\n    onClick: () => onDigitPress('3')\n  }, {\n    text: '+',\n    type: 'operation',\n    onClick: () => onOperationPress('+')\n  }, {\n    text: '0',\n    type: 'digit',\n    onClick: () => onDigitPress('0'),\n    style: {\n      gridColumn: 'span 2'\n    }\n  }, {\n    text: '.',\n    type: 'digit',\n    onClick: onDecimalPress\n  }, {\n    text: '=',\n    type: 'equals',\n    onClick: onEquals\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"keypad\",\n    children: buttons.map((button, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `button ${button.type}`,\n      onClick: button.onClick,\n      style: button.style,\n      children: button.text\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = BasicKeypad;\nexport default BasicKeypad;\nvar _c;\n$RefreshReg$(_c, \"BasicKeypad\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","BasicKeypad","onDigitPress","onDecimalPress","onOperationPress","onClear","onEquals","buttons","text","type","onClick","style","gridColumn","className","children","map","button","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alokrathaur/Documents/testProject/web/src/components/BasicKeypad.tsx"],"sourcesContent":["import React from 'react';\n\ninterface BasicKeypadProps {\n  onDigitPress: (digit: string) => void;\n  onDecimalPress: () => void;\n  onOperationPress: (operation: string) => void;\n  onClear: () => void;\n  onEquals: () => void;\n}\n\nconst BasicKeypad: React.FC<BasicKeypadProps> = ({\n  onDigitPress,\n  onDecimalPress,\n  onOperationPress,\n  onClear,\n  onEquals,\n}) => {\n  const buttons = [\n    { text: 'C', type: 'clear', onClick: onClear },\n    { text: '±', type: 'operation', onClick: () => {} },\n    { text: '%', type: 'operation', onClick: () => {} },\n    { text: '÷', type: 'operation', onClick: () => onOperationPress('÷') },\n    { text: '7', type: 'digit', onClick: () => onDigitPress('7') },\n    { text: '8', type: 'digit', onClick: () => onDigitPress('8') },\n    { text: '9', type: 'digit', onClick: () => onDigitPress('9') },\n    { text: '×', type: 'operation', onClick: () => onOperationPress('×') },\n    { text: '4', type: 'digit', onClick: () => onDigitPress('4') },\n    { text: '5', type: 'digit', onClick: () => onDigitPress('5') },\n    { text: '6', type: 'digit', onClick: () => onDigitPress('6') },\n    { text: '-', type: 'operation', onClick: () => onOperationPress('-') },\n    { text: '1', type: 'digit', onClick: () => onDigitPress('1') },\n    { text: '2', type: 'digit', onClick: () => onDigitPress('2') },\n    { text: '3', type: 'digit', onClick: () => onDigitPress('3') },\n    { text: '+', type: 'operation', onClick: () => onOperationPress('+') },\n    { text: '0', type: 'digit', onClick: () => onDigitPress('0'), style: { gridColumn: 'span 2' } },\n    { text: '.', type: 'digit', onClick: onDecimalPress },\n    { text: '=', type: 'equals', onClick: onEquals },\n  ];\n\n  return (\n    <div className=\"keypad\">\n      {buttons.map((button, index) => (\n        <button\n          key={index}\n          className={`button ${button.type}`}\n          onClick={button.onClick}\n          style={button.style}>\n          {button.text}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default BasicKeypad; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}