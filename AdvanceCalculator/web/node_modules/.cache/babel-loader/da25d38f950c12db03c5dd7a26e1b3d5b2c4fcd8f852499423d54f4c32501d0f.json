{"ast":null,"code":"var _jsxFileName = \"/Users/alokrathaur/Documents/testProject/web/src/components/ScientificKeypad.tsx\";\nimport React from 'react';\nimport BasicKeypad from './BasicKeypad';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScientificKeypad = ({\n  onDigitPress,\n  onDecimalPress,\n  onOperationPress,\n  onClear,\n  displayValue,\n  setDisplayValue,\n  addToHistory\n}) => {\n  const scientificFunctions = [{\n    text: 'sin',\n    onClick: () => {\n      const value = Math.sin(parseFloat(displayValue) * Math.PI / 180);\n      setDisplayValue(value.toString());\n      addToHistory(`sin(${displayValue}°) = ${value}`);\n    }\n  }, {\n    text: 'cos',\n    onClick: () => {\n      const value = Math.cos(parseFloat(displayValue) * Math.PI / 180);\n      setDisplayValue(value.toString());\n      addToHistory(`cos(${displayValue}°) = ${value}`);\n    }\n  }, {\n    text: 'tan',\n    onClick: () => {\n      const value = Math.tan(parseFloat(displayValue) * Math.PI / 180);\n      setDisplayValue(value.toString());\n      addToHistory(`tan(${displayValue}°) = ${value}`);\n    }\n  }, {\n    text: 'log',\n    onClick: () => {\n      const value = Math.log10(parseFloat(displayValue));\n      setDisplayValue(value.toString());\n      addToHistory(`log(${displayValue}) = ${value}`);\n    }\n  }, {\n    text: 'ln',\n    onClick: () => {\n      const value = Math.log(parseFloat(displayValue));\n      setDisplayValue(value.toString());\n      addToHistory(`ln(${displayValue}) = ${value}`);\n    }\n  }, {\n    text: '√',\n    onClick: () => {\n      const value = Math.sqrt(parseFloat(displayValue));\n      setDisplayValue(value.toString());\n      addToHistory(`√(${displayValue}) = ${value}`);\n    }\n  }, {\n    text: 'x²',\n    onClick: () => {\n      const value = Math.pow(parseFloat(displayValue), 2);\n      setDisplayValue(value.toString());\n      addToHistory(`${displayValue}² = ${value}`);\n    }\n  }, {\n    text: 'x³',\n    onClick: () => {\n      const value = Math.pow(parseFloat(displayValue), 3);\n      setDisplayValue(value.toString());\n      addToHistory(`${displayValue}³ = ${value}`);\n    }\n  }, {\n    text: '1/x',\n    onClick: () => {\n      const value = 1 / parseFloat(displayValue);\n      setDisplayValue(value.toString());\n      addToHistory(`1/${displayValue} = ${value}`);\n    }\n  }, {\n    text: 'π',\n    onClick: () => {\n      setDisplayValue(Math.PI.toString());\n    }\n  }, {\n    text: 'e',\n    onClick: () => {\n      setDisplayValue(Math.E.toString());\n    }\n  }, {\n    text: 'n!',\n    onClick: () => {\n      const n = parseInt(displayValue);\n      let factorial = 1;\n      for (let i = 2; i <= n; i++) {\n        factorial *= i;\n      }\n      setDisplayValue(factorial.toString());\n      addToHistory(`${displayValue}! = ${factorial}`);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scientific-keypad\",\n      children: scientificFunctions.map((button, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"scientific-button\",\n        onClick: button.onClick,\n        children: button.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BasicKeypad, {\n      onDigitPress: onDigitPress,\n      onDecimalPress: onDecimalPress,\n      onOperationPress: onOperationPress,\n      onClear: onClear,\n      onEquals: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_c = ScientificKeypad;\nexport default ScientificKeypad;\nvar _c;\n$RefreshReg$(_c, \"ScientificKeypad\");","map":{"version":3,"names":["React","BasicKeypad","jsxDEV","_jsxDEV","ScientificKeypad","onDigitPress","onDecimalPress","onOperationPress","onClear","displayValue","setDisplayValue","addToHistory","scientificFunctions","text","onClick","value","Math","sin","parseFloat","PI","toString","cos","tan","log10","log","sqrt","pow","E","n","parseInt","factorial","i","children","className","map","button","index","fileName","_jsxFileName","lineNumber","columnNumber","onEquals","_c","$RefreshReg$"],"sources":["/Users/alokrathaur/Documents/testProject/web/src/components/ScientificKeypad.tsx"],"sourcesContent":["import React from 'react';\nimport BasicKeypad from './BasicKeypad';\n\ninterface ScientificKeypadProps {\n  onDigitPress: (digit: string) => void;\n  onDecimalPress: () => void;\n  onOperationPress: (operation: string) => void;\n  onClear: () => void;\n  displayValue: string;\n  setDisplayValue: (value: string) => void;\n  addToHistory: (calculation: string) => void;\n}\n\nconst ScientificKeypad: React.FC<ScientificKeypadProps> = ({\n  onDigitPress,\n  onDecimalPress,\n  onOperationPress,\n  onClear,\n  displayValue,\n  setDisplayValue,\n  addToHistory,\n}) => {\n  const scientificFunctions = [\n    { text: 'sin', onClick: () => {\n      const value = Math.sin(parseFloat(displayValue) * Math.PI / 180);\n      setDisplayValue(value.toString());\n      addToHistory(`sin(${displayValue}°) = ${value}`);\n    }},\n    { text: 'cos', onClick: () => {\n      const value = Math.cos(parseFloat(displayValue) * Math.PI / 180);\n      setDisplayValue(value.toString());\n      addToHistory(`cos(${displayValue}°) = ${value}`);\n    }},\n    { text: 'tan', onClick: () => {\n      const value = Math.tan(parseFloat(displayValue) * Math.PI / 180);\n      setDisplayValue(value.toString());\n      addToHistory(`tan(${displayValue}°) = ${value}`);\n    }},\n    { text: 'log', onClick: () => {\n      const value = Math.log10(parseFloat(displayValue));\n      setDisplayValue(value.toString());\n      addToHistory(`log(${displayValue}) = ${value}`);\n    }},\n    { text: 'ln', onClick: () => {\n      const value = Math.log(parseFloat(displayValue));\n      setDisplayValue(value.toString());\n      addToHistory(`ln(${displayValue}) = ${value}`);\n    }},\n    { text: '√', onClick: () => {\n      const value = Math.sqrt(parseFloat(displayValue));\n      setDisplayValue(value.toString());\n      addToHistory(`√(${displayValue}) = ${value}`);\n    }},\n    { text: 'x²', onClick: () => {\n      const value = Math.pow(parseFloat(displayValue), 2);\n      setDisplayValue(value.toString());\n      addToHistory(`${displayValue}² = ${value}`);\n    }},\n    { text: 'x³', onClick: () => {\n      const value = Math.pow(parseFloat(displayValue), 3);\n      setDisplayValue(value.toString());\n      addToHistory(`${displayValue}³ = ${value}`);\n    }},\n    { text: '1/x', onClick: () => {\n      const value = 1 / parseFloat(displayValue);\n      setDisplayValue(value.toString());\n      addToHistory(`1/${displayValue} = ${value}`);\n    }},\n    { text: 'π', onClick: () => {\n      setDisplayValue(Math.PI.toString());\n    }},\n    { text: 'e', onClick: () => {\n      setDisplayValue(Math.E.toString());\n    }},\n    { text: 'n!', onClick: () => {\n      const n = parseInt(displayValue);\n      let factorial = 1;\n      for (let i = 2; i <= n; i++) {\n        factorial *= i;\n      }\n      setDisplayValue(factorial.toString());\n      addToHistory(`${displayValue}! = ${factorial}`);\n    }},\n  ];\n\n  return (\n    <div>\n      <div className=\"scientific-keypad\">\n        {scientificFunctions.map((button, index) => (\n          <button\n            key={index}\n            className=\"scientific-button\"\n            onClick={button.onClick}>\n            {button.text}\n          </button>\n        ))}\n      </div>\n      \n      <BasicKeypad\n        onDigitPress={onDigitPress}\n        onDecimalPress={onDecimalPress}\n        onOperationPress={onOperationPress}\n        onClear={onClear}\n        onEquals={() => {}}\n      />\n    </div>\n  );\n};\n\nexport default ScientificKeypad; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}